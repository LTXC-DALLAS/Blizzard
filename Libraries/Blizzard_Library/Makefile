### Because of the frequent modification in the Makefile, the decision has
### been made to always rewrite the Makefile.  Any modification in this
### Makefile will be over-written by methodTool, MethodCompiler or even
### ObjectProcessor.
###
### Customer can create "Makefile.custom" which will be included by this
### Makefile for those customized flags required to successfully compile
### the method
###
### Version: 8
###
MAIN = ApplicationMethodCompiler

TIME_STR = date +%T
DATE_STR = date +%m/%d/%Y
TIME = $(shell $(TIME_STR))
DATE = $(shell $(DATE_STR))

LOCAL_CFLAGS        += 
LOCAL_INCLUDE_FLAGS += 
LOCAL_LINK_LIBRARY  += 

first_rule: $(MAIN)

VOB_CCXX  = /vobs/compilers/gcc-4.1.2-test/bin/g++4
USR_CCXX  = /usr
CCXX_TEST = \
	  if [ -f '$(VOB_CCXX)' ];             then echo '$(VOB_CCXX)';             \
	elif [ -f '$(USR_CCXX)/bin/g++4' ];     then echo '$(USR_CCXX)/bin/g++4';     \
	elif [ -f '$(GCC_HOME)/bin/g++' ];     then echo '$(GCC_HOME)/bin/g++';     \
	elif [ -f '$(USR_CCXX)/bin/g++' ];     then echo '$(USR_CCXX)/bin/g++';     \
	else                                        echo '/opt/gcc-3.3.2/bin/g++';  \
	  fi;

CCXX = $(shell $(CCXX_TEST))
CC   = $(CCXX)

SHARE_LIB_CREATION_FLAGS = -shared
ARCHITECTURE_NAME = i686_linux_2.6.9
EVSO_SUBDIR = $(TESTER)/i686_linux_2.6.9

### The TESTER_FLAGS need to be set to -DDNT for testers VX500, VX4 and VX6
TESTER_FLAGS_TEST = \
	if test $(TESTER) = 'DNT'; then echo '-DVX250'; else echo '-DDNT'; fi;
TESTER_FLAGS = $(shell $(TESTER_FLAGS_TEST))

TESTER_TEMPNT_TEST = \
	if test $(TESTER) = 'VX6'; then echo '-DVX6_TEMPNT -DTESTER_VALUE=VX6'; \
	elif test $(TESTER) = "FX1"; \
	then echo '-DVX6 -DVX6_TEMPNT -DTESTER_VALUE=FX1'; fi;
TESTER_TEMPNT_FLAGS = $(shell $(TESTER_TEMPNT_TEST))

INCLUDE_FLAGS = $(LOCAL_INCLUDE_FLAGS) \
		-I. -I$(CUSTOMER_DIR)/include/$(TESTER) \
		-I$(CUSTOMER_DIR)/include 

OPTIMIZE_CFLAGS = -O2

CFLAGS = $(LOCAL_CFLAGS) $(OPTIMIZE_CFLAGS) \
	 -Wwrite-strings -fnon-call-exceptions -fcheck-new -funsigned-bitfields -DGCC -DV3  -fnon-call-exceptions \
	 -DENVISION -DPHASE_EXEC_TOOLS=1 -DPHASE_TM=1 \
	 -DLINUX_TARGET=1 -DLINUX  -Di686 \
	 -D$(TESTER) $(TESTER_FLAGS) $(TESTER_TEMPNT_FLAGS) \
	 -fPIC -DFORCE -DNARROWPROTO -DXTFUNCPROTO -DC_PLUSPLUS=1 -DTC -DSTAGE=3

UTL_EXTRA_CFLAGS = -fmessage-length=0
UTL_CFLAGS = $(LOCAL_CFLAGS) $(UTL_EXTRA_CFLAGS) \
	 -fPIC -DC_PLUSPLUS=1 \
	 -Wwrite-strings -fnon-call-exceptions -fcheck-new -funsigned-bitfields -DGCC -DV3  -fnon-call-exceptions -Werror -Wreturn-type 
SCRIPT_OPTIONS = -nohead -gcc $(CCXX) -flags "$(UTL_CFLAGS)"


### DO NOT EDIT THE SECTION BELOW.  IT IS BEING GENERATED BY methodTool.

SCRIPT = /opt/ltx/releases/UOP.SJ20120121/i686_linux_2.6.9/customer/bin/CompileApplLib $(SCRIPT_OPTIONS)
libLeakageDemoLib.un.so: \
	/u/jthacker/test_prog/Unison_TIDlog/Log/Libraries/AppsLib/TI_DC.cpp \
	/u/jthacker/test_prog/Unison_TIDlog/Log/Libraries/AppsLib/Test_value.cpp \
	/u/jthacker/test_prog/Unison_TIDlog/Log/Libraries/AppsLib/CbitCtrl.cpp \
	/u/jthacker/test_prog/Unison_TIDlog/Log/Libraries/AppsLib/FX_TMU.cpp \
	/u/jthacker/test_prog/Unison_TIDlog/Log/Libraries/AppsLib/TestwareSupport.cpp
		@$(SCRIPT) /u/jthacker/test_prog/Unison_TIDlog/Log/Libraries/AppsLib/i686_linux_2.6.9/LeakageDemoLib.usc

APPLICATION_LIB_FILES = \
	libLeakageDemoLib.un.so

$(MAIN): $(APPLICATION_LIB_FILES)
	@for name in $(APPLICATION_LIB_FILES); \
		do echo "   Done compiling: $$name"; \
	done

### ABLE TO EDIT THE SECTION BELOW.  IT IS NOT GENERATED BY methodTool.

JUNK:
	@for name in $(TEST_METHODS); do echo $$name; done

